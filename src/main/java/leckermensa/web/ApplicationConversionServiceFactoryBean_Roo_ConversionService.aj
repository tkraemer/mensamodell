// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package leckermensa.web;

import leckermensa.domain.mensa.Mensa;
import leckermensa.domain.mensa.Speise;
import leckermensa.domain.mensa.Woche;
import leckermensa.domain.mensa.Zutaten;
import leckermensa.domain.nutzer.Person;
import leckermensa.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Mensa, String> ApplicationConversionServiceFactoryBean.getMensaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<leckermensa.domain.mensa.Mensa, java.lang.String>() {
            public String convert(Mensa mensa) {
                return new StringBuilder().append(mensa.getStandort()).append(' ').append(mensa.getSiztplaetze()).toString();
            }
        };
    }
    
    public Converter<Long, Mensa> ApplicationConversionServiceFactoryBean.getIdToMensaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, leckermensa.domain.mensa.Mensa>() {
            public leckermensa.domain.mensa.Mensa convert(java.lang.Long id) {
                return Mensa.findMensa(id);
            }
        };
    }
    
    public Converter<String, Mensa> ApplicationConversionServiceFactoryBean.getStringToMensaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, leckermensa.domain.mensa.Mensa>() {
            public leckermensa.domain.mensa.Mensa convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Mensa.class);
            }
        };
    }
    
    public Converter<Speise, String> ApplicationConversionServiceFactoryBean.getSpeiseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<leckermensa.domain.mensa.Speise, java.lang.String>() {
            public String convert(Speise speise) {
                return new StringBuilder().append(speise.getAusstattung()).append(' ').append(speise.getMyname()).toString();
            }
        };
    }
    
    public Converter<Long, Speise> ApplicationConversionServiceFactoryBean.getIdToSpeiseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, leckermensa.domain.mensa.Speise>() {
            public leckermensa.domain.mensa.Speise convert(java.lang.Long id) {
                return Speise.findSpeise(id);
            }
        };
    }
    
    public Converter<String, Speise> ApplicationConversionServiceFactoryBean.getStringToSpeiseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, leckermensa.domain.mensa.Speise>() {
            public leckermensa.domain.mensa.Speise convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Speise.class);
            }
        };
    }
    
    public Converter<Woche, String> ApplicationConversionServiceFactoryBean.getWocheToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<leckermensa.domain.mensa.Woche, java.lang.String>() {
            public String convert(Woche woche) {
                return new StringBuilder().append(woche.getMyname()).toString();
            }
        };
    }
    
    public Converter<Long, Woche> ApplicationConversionServiceFactoryBean.getIdToWocheConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, leckermensa.domain.mensa.Woche>() {
            public leckermensa.domain.mensa.Woche convert(java.lang.Long id) {
                return Woche.findWoche(id);
            }
        };
    }
    
    public Converter<String, Woche> ApplicationConversionServiceFactoryBean.getStringToWocheConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, leckermensa.domain.mensa.Woche>() {
            public leckermensa.domain.mensa.Woche convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Woche.class);
            }
        };
    }
    
    public Converter<Zutaten, String> ApplicationConversionServiceFactoryBean.getZutatenToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<leckermensa.domain.mensa.Zutaten, java.lang.String>() {
            public String convert(Zutaten zutaten) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Zutaten> ApplicationConversionServiceFactoryBean.getIdToZutatenConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, leckermensa.domain.mensa.Zutaten>() {
            public leckermensa.domain.mensa.Zutaten convert(java.lang.Long id) {
                return Zutaten.findZutaten(id);
            }
        };
    }
    
    public Converter<String, Zutaten> ApplicationConversionServiceFactoryBean.getStringToZutatenConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, leckermensa.domain.mensa.Zutaten>() {
            public leckermensa.domain.mensa.Zutaten convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Zutaten.class);
            }
        };
    }
    
    public Converter<Person, String> ApplicationConversionServiceFactoryBean.getPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<leckermensa.domain.nutzer.Person, java.lang.String>() {
            public String convert(Person person) {
                return new StringBuilder().append(person.getRolle()).append(' ').append(person.getMyname()).toString();
            }
        };
    }
    
    public Converter<Long, Person> ApplicationConversionServiceFactoryBean.getIdToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, leckermensa.domain.nutzer.Person>() {
            public leckermensa.domain.nutzer.Person convert(java.lang.Long id) {
                return Person.findPerson(id);
            }
        };
    }
    
    public Converter<String, Person> ApplicationConversionServiceFactoryBean.getStringToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, leckermensa.domain.nutzer.Person>() {
            public leckermensa.domain.nutzer.Person convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Person.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getMensaToStringConverter());
        registry.addConverter(getIdToMensaConverter());
        registry.addConverter(getStringToMensaConverter());
        registry.addConverter(getSpeiseToStringConverter());
        registry.addConverter(getIdToSpeiseConverter());
        registry.addConverter(getStringToSpeiseConverter());
        registry.addConverter(getWocheToStringConverter());
        registry.addConverter(getIdToWocheConverter());
        registry.addConverter(getStringToWocheConverter());
        registry.addConverter(getZutatenToStringConverter());
        registry.addConverter(getIdToZutatenConverter());
        registry.addConverter(getStringToZutatenConverter());
        registry.addConverter(getPersonToStringConverter());
        registry.addConverter(getIdToPersonConverter());
        registry.addConverter(getStringToPersonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
